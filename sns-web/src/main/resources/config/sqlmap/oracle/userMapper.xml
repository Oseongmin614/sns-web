<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.ac.kopo.sns.dao.UserDAO">

    <!-- UserVO 객체와 데이터베이스 컬럼 매핑 -->
    <resultMap id="userResultMap" type="kr.ac.kopo.sns.vo.UserVO">
        <id property="userId" column="USER_ID" />
        <result property="email" column="EMAIL" />
        <result property="password" column="PASSWORD" />
        <result property="nickname" column="NICKNAME" />
        <result property="profileImg" column="PROFILE_IMG" />
        <result property="role" column="ROLE" />
        <result property="provider" column="PROVIDER" />
        <result property="providerId" column="PROVIDER_ID" />
        <result property="status" column="STATUS" />
        <result property="createdAt" column="CREATED_AT" />
        <result property="updatedAt" column="UPDATED_AT" />
    </resultMap>

    <!-- 이메일로 사용자 조회 -->
    <select id="selectUserByEmail" parameterType="String" resultMap="userResultMap">
        SELECT 
            USER_ID, EMAIL, PASSWORD, NICKNAME, PROFILE_IMG,
            ROLE, PROVIDER, PROVIDER_ID, STATUS, CREATED_AT, UPDATED_AT
        FROM USERS 
        WHERE EMAIL = #{email}
          AND STATUS = 'ACTIVE'
    </select>

    <!-- ID로 사용자 조회 -->
    <select id="selectUserById" parameterType="Long" resultMap="userResultMap">
        SELECT 
            USER_ID, EMAIL, PASSWORD, NICKNAME, PROFILE_IMG,
            ROLE, PROVIDER, PROVIDER_ID, STATUS, CREATED_AT, UPDATED_AT
        FROM USERS 
        WHERE USER_ID = #{userId}
          AND STATUS = 'ACTIVE'
    </select>

    <!-- 사용자 등록 -->
    <insert id="insertUser" parameterType="kr.ac.kopo.sns.vo.UserVO">
        INSERT INTO USERS (
            EMAIL, PASSWORD, NICKNAME, ROLE, STATUS, CREATED_AT
        ) VALUES (
            #{email}, #{password}, #{nickname}, 'USER', 'ACTIVE', SYSDATE
        )
    </insert>

    <!-- 이메일 중복 체크 -->
    <select id="existsByEmail" parameterType="String" resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
        FROM USERS 
        WHERE EMAIL = #{email}
    </select>

    <!-- 닉네임 중복 체크 -->
    <select id="existsByNickname" parameterType="String" resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
        FROM USERS 
        WHERE NICKNAME = #{nickname}
    </select>

    <!-- 마지막 로그인 시간 업데이트 -->
    <update id="updateLastLoginTime" parameterType="Long">
        UPDATE USERS 
        SET UPDATED_AT = SYSDATE 
        WHERE USER_ID = #{userId}
    </update>

    <!-- 비밀번호 변경 -->
    <update id="updatePassword" parameterType="map">
        UPDATE USERS 
        SET PASSWORD = #{password}, UPDATED_AT = SYSDATE 
        WHERE USER_ID = #{userId}
    </update>

    <!-- 모든 사용자 조회 -->
    <select id="selectAllUsers" resultMap="userResultMap">
        SELECT 
            USER_ID, EMAIL, NICKNAME, PROFILE_IMG,
            ROLE, STATUS, CREATED_AT, UPDATED_AT
        FROM USERS 
        WHERE STATUS = 'ACTIVE'
        ORDER BY CREATED_AT DESC
    </select>

</mapper>
